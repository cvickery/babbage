#  $Id: Makefile,v 1.1 1996/01/12 19:03:14 vickery Exp $

#  Makefile for CS-200

#  This is a standard Makefile for the projects you do in CS-200.
#  For every assignment or exercise you do, create a directory
#  (referred to as the "project directory") and copy this file
#  into it.  You will need to edit some lines in here depending
#  on the names of the .cpp files in your project.  With this
#  Makefile set up properly, you can use the "make" command to
#  compile and link all the parts of your program to build an
#  executable file.

#  $Log: Makefile,v $
#
#  Revision 1.1  1996/01/12 16:21:57  vickery
#  Initial revision
#


#  The default make command does not know about C++, so the following
#  lines tell it how to make a .cc file into a .o file by invoking
#  the g++ compiler.  The second rule is used to build an executable
#  file from a single .cc file, which may be used for some of the
#  sample programs, but would never be used for an assignment.

.SUFFIXES: .cc

.cc.o:
	g++ -Wall -g -c $<

.cc:
	g++ -Wall -g $< -o $@

#  The following line tells make what .o files have to be linked to
#  produce your application.  Change what is to the right of the =
#  sign depending on the structure of the project you are working on.

OBJS = main.o myClass.o

#  The following line uses the value of OBJS to generate a list of
#  the corresponding .cc files.

SRCS = ${OBJS:.o=.cc}

#  Next is the rule for generating an application.  If you want your
#  application to have a name other than "main," just change the
#  name in the first line.  Since this is the first rule in the
#  Makefile, you can invoke it by just typing "make" instead of
#  "make main."

main: ${OBJS}
	g++ -Wall -g ${OBJS} -o $@

#  The "clean" target is useful for cleaning out a project directory
#  before you submit it.

clean:
	rcsclean
	rm -f ${OBJS} core main .bak

#  Do "make depend" any time you change the value of the OBJS macro or
#  add/remove #include statements to/from your source files.  That way,
#  make will know enough to recompile source files if their #included
#  header files are edited.

depend:
	makedepend -I/usr/local/lib/g++-include ${SRCS}

# >>>>>> Make all your changes *before* this line.  <<<<<<<<<<<<<<<<<
# >>>>>> Everything after this is generated automatically  <<<<<<<<<<
# >>>>>> by makedepend and will be overwritten whenever  <<<<<<<<<<<<
# >>>>>> you run "make depend" -- which you should do every  <<<<<<<<
# >>>>>> time you change the OBJS macro.  <<<<<<<<<<<<<<<<<<<<<<<<<<<

# DO NOT DELETE THIS LINE -- make depend depends on it.
