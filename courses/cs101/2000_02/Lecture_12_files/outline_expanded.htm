<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">

<script>
<!--
if( window.name != "PPTOtl" )
  parent.location.href = "../Lecture_12.html";
//-->
</script>
<meta name=Robots content=NoIndex>
</head>

<body bgcolor=black text=white link=white vlink=white alink=white>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0001.htm');">Lecture 12</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>March 16, 2000</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0007.htm');">The Scope of a Variable</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>What if there are two variables with
  the same name?</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>A local or block-local variable can
  have the same name as a class or instance variable.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>(Other languages are not so
  restrictive.)</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>[ Scope.java ]</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0002.htm');">Object-Oriented
Programming<br>
(OOP)</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Goals</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Reduce development costs</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Improve software reliability</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Reduce maintenance costs</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Principles</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Encapsulation</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Inheritance</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Polymorphism</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0003.htm');">Goals</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Reduce development costs</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Code reuse</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Find bugs sooner (easier to fix)</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Enforce good programming practices</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Increase reliability</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Find bugs automatically</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Reduce maintenance costs</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Real-world programs last a long time</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0004.htm');">OOP Principles<br>
Encapsulation</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Programs = Algorithms + Data Structures</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Use classes to put data and the
  algorithms (methods) that manipulate those data together.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Example: You can use class Vector
  without knowing how it is implemented internally.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Public methods provide the “interface”
  to the class.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>As long as you don’t change the
  signatures of the public methods, you can change the internal details all you
  want.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Benefits: Modularity, Maintainability</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0005.htm');">Encapsulation</a></b></font></p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0006.htm');">Modularity</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>Separate Compilation</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>Parallel Development</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>Intellectually Manageable “Chunks”</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0008.htm');">Maintainability</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Lifetime of a Program</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Design</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Decide what it will do and how</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Implement</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Write and test the code</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Maintain</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Fix bugs and add features</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Academia</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Professor designs. You write and test.
  End.</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0009.htm');">Object-Oriented
Programming<br>
Inheritance</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>A class can extend another class.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Java supports “single inheritance.”</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>A subclass extends a superclass.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Leads to a class hierarchy; a tree of
  classes.</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0010.htm');">Java Class Hierarchy</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>The root class is java.lang.Object</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>All other classes are direct or
  indirect subclasses of class Object</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>You don’t have to declare that a class
  is a subclass if it is a direct subclass of Object:</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>class MyClass { … }</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>class MyClass extends Object { … }</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>class MyClass extends java.lang.Object
  { … }</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Consider class javax.swing.JApplet</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0011.htm');">Subclasses and Superclasses</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>A subclass inherits methods and fields
  from its superclass, super-superclass, etc.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>A subclass object therefore is a
  superclass object, but with additional features.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>A superclass may override some or all
  of its superclass’ methods.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Exercise: Write a superclass and a
  subclass that both implement a method named identifyYourself(), but
  differently from each other.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Have the subclass provide an additional
  method, saySomethingNice().</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>[ TestClasses.java ]</font></td>
 </tr>
</table>

</p>

</body>

</html>
