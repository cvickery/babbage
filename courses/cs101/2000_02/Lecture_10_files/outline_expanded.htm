<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">

<script>
<!--
if( window.name != "PPTOtl" )
  parent.location.href = "../Lecture_10.html";
//-->
</script>
<meta name=Robots content=NoIndex>
</head>

<body>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0001.htm');">Lecture 10</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>March 10, 2000</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0002.htm');">Tonight’s Topics</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Review for Exam</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Arrays</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Exercise 3</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Exercise 4</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Vectors (Not covered in class.)</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Object Based Programming</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0003.htm');">Arrays and Loops</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>What does code this print?</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0004.htm');">Exercise 3 Algorithm</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=4><font face=Arial size=2>Create a SortedWordList object.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=4><font face=Arial size=2>For each command line argument:</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>Create a BufferedReader.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>For each line in the file:</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=2><font face=Arial size=2>Create a StringTokenizer object.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=2><font face=Arial size=2>For each word in the StringTokenizer:</font></td>
 </tr>
 <tr>
  <td colspan=4></td>
  <td colspan=1><font face=Arial size=2>Add the word to the SortedWordList.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=4><font face=Arial size=2>For each WordCounter in the
  SortedWordList:</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>Print the counter and the word.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0005.htm');">How Many?</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>SortedWordList reference variables?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>SortedWordList objects?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>BufferedReader reference variables?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>BufferedReader objects?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>String reference variables for the
  lines?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>String objects for the lines?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>StringTokenizer reference variables?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>StringTokenizer objects?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>String reference variables for the
  words?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>String Objects for the words?</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0006.htm');">Exercise 4 (addWord())
Algorithm</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Convert the word to lowercase.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Compare the word to each word already
  in the array until:</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>The word is found in the array.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Add one to the counter and return
  false.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>A word is found that comes
  alphabetically after the word.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Double capacity if necessary.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Insert the word into the array at this
  position and return true.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>The end of the array is reached.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Double capacity if necessary.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Create a new WordCounter for this word,
  add one to the size of the array, add this WordCounter after the last
  occupied element in the array, and return true.</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0007.htm');">How To Use Class Vector for
Exercise 4</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Same as array version, except:</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>No need to check for capacity or to
  move elements out of the way.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Use method get() to get a WordCounter
  object from the Vector instead of array subscripting.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Method insertWordAt() is implemented by
  using Vector’s insertElementAt() method.</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0008.htm');">Object Based Programming</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Classes have to be loaded from disk
  into memory before they can be instantiated.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Once loaded, a class might be
  instantiated, zero, one, or multiple times.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Static variables and methods are
  available as soon as the class has been loaded.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Instance methods are loaded with the
  class, but can’t be called until the class has been instantiated at least
  once because you need an object to call an instance method.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Instance variables don’t even exist
  until an object is created.</font></td>
 </tr>
</table>

</p>

</body>

</html>
