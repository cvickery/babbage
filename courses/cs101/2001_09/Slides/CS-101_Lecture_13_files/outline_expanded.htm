<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">

<script>
<!--
if( window.name != "PPTOtl" )
  parent.location.href = "../CS-101_Lecture_13.htm";
//-->
</script>
<meta name=Robots content=NoIndex>
</head>

<body bgcolor=black text=white link=white vlink=white alink=white>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0001.htm');">CS-101 Lecture 13</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=1><font face=Arial size=2>October 23, 2001</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0002.htm');">Exception Management</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Exceptions and Errors</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Exceptions are things the programmer
  can anticipate.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>User enters letters instead of digits,
  for example.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Errors are outside the programmer’s
  control.</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Running out of memory, for example.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>The Java model: An exception is
  represented as an object that is created in a method, which can handle it
  itself, or pass it back to its calling method, which can handle it itself, or
  pass it back to its calling method, which …</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>If it gets back to the top of the
  thread’s calling stack, the thread terminates – ungracefully.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>When an exception is thrown, it causes abrupt
  termination of the method that was executing.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>No more statements get executed</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>No value gets returned</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0003.htm');">Exception Objects</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Exception and Error are subclasses of
  the class Throwable, which means it inherits several methods, including:</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>toString()</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>getMessage()</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>printStackTrace</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>There are many subclasses of Exception.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>Which leads to the logic of
  try/catch/finally …</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0004.htm');">Throws, and
try/catch/finally</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>A method that throws an exception or
  which calls another method which throws an exception for which there is no
  try/catch must declare that fact:</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>public static void main( String[] args) throws IOException { … }</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>try/catch/finally</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>try { … }</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>catch ( IOException ioe ) { A }&#9;&#9;// subclass</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>catch ( Exception e ) { B }&#9;&#9;//superclass</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>finally { C }</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>A, B, and C are possibly empty
  sequences of statements.</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0005.htm');">The throw Operator</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=4><font face=Arial size=2>It’s an operator the way new is an
  operator.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>But throw doesn’t return a value; it
  causes abrupt termination.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=4><font face=Arial size=2>It’s a unary operator, like new and the
  “negate” form of -.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>One operand</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>To the right of it</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>Has to be an object of class Throwable.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=3><font face=Arial size=2>Often created with new:</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>throw new Exception( “A meaningful message” );</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>throw new RuntimeException( “Another m.m.” );</font></td>
 </tr>
 <tr>
  <td colspan=4></td>
  <td colspan=1><font face=Arial size=2>(RuntimeExceptions don’t have to be
  declared in the throws clause of a method.)</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0006.htm');">You Can Create Your Own
Exception Classes</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>public class HelloException extends Exception</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>{</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun: yes">  
  </span>public HelloException( String str )</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun: yes">  
  </span>{</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun: yes">     
  </span>super( str );</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun: yes">  
  </span>}</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>}</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>The reason for doing so is that the name
  of the exception class helps document what went wrong.</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=1><font face=Arial size=2>HelloException objects would be thrown
  when something went wrong with Hello operations, just as IOException objects
  get thrown when something goes wrong with I/O operations and ArrayIndexOutOfBoundsException
  objects are thrown when an array index (subscript) value is too large, etc.</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=2><font face=Arial size=2>Sample Code: Exception_ex.java</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0007.htm');">Class java.io.File</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Represents a file or directory pathname</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Sep Dir Sep Dir Sep Dir Sep Fil</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Sep is system separator: \ in Windows,
  / in Unix</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Dir is the name of a directory</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Fil is the name of a file</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>May be absolute (starting at the root)
  or relative (starting, usually, in the current directory).</font></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Methods</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>isFile(), isDirectory(), canRead(),
  canWrite(), renameTo(), delete(), getName(), getParent(), getCanonicalPath()</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Many more.</font></td>
 </tr>
</table>

</p>

<p><font face=Arial size=2><b><a
href="javascript:parent.GoToSld('slide0008.htm');">Reading a Binary File</a></b></font>

<table>
 <tr>
  <td width=5 nowrap></td>
  <td width=20 nowrap></td>
  <td width=20 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td colspan=3><font face=Arial size=2>Class FileInputStream</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2>Constructors that take a File or a
  String</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>int read( )</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Returns a byte as an int</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Returns –1 if no more bytes</font></td>
 </tr>
 <tr>
  <td colspan=2></td>
  <td colspan=2><font face=Arial size=2><span style="mso-spacerun:
  yes"> </span>int read( byte[ ] b)</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Reads up to b.length bytes into b</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Returns number of bytes actually read</font></td>
 </tr>
 <tr>
  <td colspan=3></td>
  <td colspan=1><font face=Arial size=2>Returns –1 if no more bytes.</font></td>
 </tr>
</table>

</p>

</body>

</html>
