
Many thanks to a student who found two typos in the solutions to
Assignment 11 that I sent out yesterday.  Both were in 6.5b, and both
are corrected in the copy of the solutions given below.

Let me know if you spot any more!

Dr. Vickery


6.4 Register %r0 cannot be changed, so there is no need for it to have
    a write enable line.

6.5 (a) 

  Write Enables   A-Bus Enables   B-Bus Enables
  0   1   2   3   0   1   2   3   0   1   2   3   F0  F1  Time
  -------------   -------------   -------------   ------  ----
  0   1   0   0   0   1   0   0   0   0   0   0   1   1   0   r1 <- ~r1
  1   0   0   0   1   0   0   0   0   1   0   0   0   0   1   r0 <- r0 + r1
  1   0   0   0   1   0   0   0   0   0   0   1   0   0   2   r0 <- r0 + r3

    (b) x xor y = x~y+~xy = ~(~(x~y)~(~xy))
  Write Enables   A-Bus Enables   B-Bus Enables
  0   1   2   3   0   1   2   3   0   1   2   3   F0  F1  Time
  -------------   -------------   -------------   ------  ----
  0   0   1   0   1   0   0   0   0   0   0   0   1   0   0     r2 <- r0
  1   0   0   0   0   1   0   0   0   0   0   0   1   1   1     r0 <- ~r1
  1   0   0   0   1   0   0   0   0   0   1   0   0   1   2     r0 <- r0 * r2
  1   0   0   0   1   0   0   0   0   0   0   0   1   1   3     r0 <- ~r0
  0   0   1   0   0   0   1   0   0   0   0   0   1   1   4     r2 <- ~r2
  0   0   1   0   0   0   1   0   0   1   0   0   0   1   5     r2 <- r2 * r1
  0   0   1   0   0   0   1   0   0   0   0   0   1   1   6     r2 <- ~r2
  1   0   0   0   1   0   0   0   0   0   1   0   0   1   7     r0 <- r0 * r2
  1   0   0   0   1   0   0   0   0   0   0   0   1   1   8     r0 <- ~r0

6.6          A        B        C
             M        M        M
             u        u        u RW
      A Bus  x B Bus  x C Bus  x DR ALU  Cnd Jump Addr
  60: 000000 0 100001 0 100001 0 00 0111 010 00001000000
  61: 000000 1 000000 0 000000 1 00 1101 000 00000000000

6.7
    R[temp0] <- Sext13(R[ir]);
    R[temp0] <- Add(R[rs1], R[temp0]); goto 1793;
    R[temp0] <- Add(R[rs1],R[rs2]); If IR[13] goto 1810;

6.8
    1280: R[15] <- And(R[pc], R[pc]);             / Save %pc in %r15
    1281: R[temp0] <- Lshift2( R[ir] )            / Multiply disp30 by 4
    1282: R[pc] <- Add(R[pc], R[temp0]); goto 0;  / Jmp to Subroutine

6.9 (a) Either seven or eight microinstructions are executed, depending
    on the value of IR[13]:

  IR[13]
      0:  0, 1, 1584, 1585, 1586, 1587, 1603, 2047
      1:  0, 1, 1584, 1586, 1587, 1603, 2047

6.10 (a)  0, 1, 1088, 2, 3, 4, 5, 6, 7, 8, 12

6.11  There should be two sets of 32 tristate buffers.  The data value
      zero is wired (from the 0 side of the power supply) to the data
      input of each of the 64 buffers.  One set of 32 connects to the
      32 wires of the A Bus, and are all enabled by the a0 output of
      the A Decoder.  The other set of 32 connects to the 32 wires of
      the B Bus, and are all enabled by the b0 output of the B Decoder.
      There is no connection to the C Bus because nothing ever actually
      gets loaded into %r0 from anywhere.

6.12
      000000, or any bit pattern that is greater than decimal 37.

