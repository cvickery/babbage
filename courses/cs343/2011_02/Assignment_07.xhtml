<?php
  header("Vary: Accept");
  if (  array_key_exists("HTTP_ACCEPT", $_SERVER) &&
        stristr($_SERVER["HTTP_ACCEPT"], "application/xhtml+xml") ||
        stristr($_SERVER["HTTP_USER_AGENT"], "W3C_Validator")
      )
  {
    header("Content-type: application/xhtml+xml");
    header("Last-Modified: "
                    .date('r',filemtime($_SERVER['SCRIPT_FILENAME'])));
    print("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n");
    $doctype = "XHTML5";
  }
  else
  {
    header("Content-type: text/html; charset=utf-8");
    $doctype = "HTML5";
  }
 ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>CS-343 Assignment 7</title>
    <link rel='alternate' type='application/atom+xml' title='Atom' href='./feed.xml' />
    <link rel="shortcut-icon" href="../favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../../css/assignments.css" />
    <link rel="stylesheet" type="text/css" href="../../css/assignments-print.css" media="print" />
    <style type="text/css">
      img {border:1px solid blue;}
      .big-sig {font-size:1.2em; font-weight:bold;position:relative;top:0.1em;}
    </style>
  </head>
  <body id='urn:uuid:4C05867E-DB96-446E-8954-E64508091342'>
    <h1>CS-343 Assignment 7<br/>
    Due May 17th</h1>
    <div id="content">
      <h2>Reading Assignment, Reference Material, and Resources</h2>
      <div>
        <p>
          This assignment covers material from Chapter 4 of the textbook.
        </p>
      </div>
      <h2>Questions</h2>
      <div>
        <p>
          Put the answers to the following questions in the <em>body</em> of an email message (no attachments
          accepted). Use “<code>CS-343 Assignment 7 submission</code>” as the subject line. Be sure your name
          is in the email so you can receive credit.
        </p>
        <p class="standout-block">
          You must submit this assignment by 5:00 pm on the due date to receive credit for it.
        </p>
        <ol>
          <li>
            Figure 4.1 shows two adders. Which one (the left one or the right one) is used to compute Branch Target Addresses?
          </li>
          <li>
            Explain why the output of the ALU is connected to both the Data Memory and the Register File.
          </li>
          <li>
            Where do the <em>rs</em> and <em>rt</em> instruction fields connect in Figure 4.7?
          </li>
          <li>
            Where do the <em>R[rs]</em> and <em>R[rt]</em> values connect in Figure 4.7?
          </li>
          <li>
            Construct a table with three rows, labelled <em>R-type</em>, <em>lw</em>, and <em>sw</em>, and three columns
            labelled <em>RegWrite</em>, <em>MemWrite</em>, and <em>MemRead</em>. Put a “1” in each cell where the indicated control
            signal would be true for the given op code, and a “0” in all the other cells.
          </li>
          <li>
            Why is there no “<em>RegRead</em>” control signal?
          </li>
          <li>
            For the Data Memory unit (Figure 4.8), assume the <em>MemRead</em> control signal signal is <em>true</em>, and answer the
            following questions:
            <ol>
              <li>What is the op code of the instruction being executed?</li>
              <li>Which inputs and/or outputs are irrelevant when <em>MemRead</em> is true?</li>
              <li>Which inputs and/or outputs must be set to zero when <em>MemRead</em> is true?</li>
            </ol>
          </li>
          <li>
            For the Data Memory unit (Figure 4.8), assume the <em>MemWrite</em> control signal signal is <em>true</em>, and answer the
            following questions:
            <ol>
              <li>What is the op code of the instruction being executed?</li>
              <li>Which inputs and/or outputs are irrelevant when <em>MemWrite</em> is true?</li>
              <li>Which inputs and/or outputs must be set to zero when <em>MemWrite</em> is true?</li>
            </ol>
          </li>
          <li>
            What is the ALU used for during the execution of <em>beq</em> instructions?
          </li>
          <li>
            What is the purpose of the <em>MemToReg</em> control signal?
          </li>
          <li>
            For which op code(s) will the <em>MemToReg</em> control signal be true?
          </li>
          <li>
            What is the purpose of the AND gate in Figure 4.17?
          </li>
          <li>
            What must the value of <em>RegDst</em> be for R-type instructions?
          </li>
          <li>
            What must the value of <em>RegDst</em> be for <em>lw</em> instructions?
          </li>
          <li>
            What must the value of <em>RegDst</em> be for <em>sw</em> instructions, and why?
          </li>
          <li>
            What must the value of <em>RegDst</em> be for <em>beq</em> instructions, and why?
          </li>
          <li>Define <em>instruction latency</em>.</li>
          <li>Define <em>instruction throughput</em>.</li>
          <li>What is the relationship between latency and throughput for the single-cycle datapath?</li>
          <li>What is the equation for the time it takes to execute a program?</li>
          <li>What determines the minimum clock period for the single-cycle datapath? (General answer.)</li>
          <li>Which one instruction determines the minimum clock period for the single-cycle datapath, and why?</li>
          <li>What is a <em>perfectly balanced</em> pipeline?</li>
          <li>What is the relationship between latency and throughput for a pipelined datapath?</li>
          <li>
            What is the maximum clock speed for a perfectly balanced <em>n</em>-stage pipelined datapath compared to
            a single-cycle datapath implemented using the same technology (same propogation delays for the gates)?
          </li>
          <li>
            What is the instruction <em>latency</em> for a perfectly balanced <em>n</em>-stage pipelined datapath compared to
            a single-cycle datapath implemented using the same technology?
          </li>
          <li>
            What is the instruction <em>throughput</em> for a perfectly balanced <em>n</em>-stage pipelined datapath compared to
            a single-cycle datapath implemented using the same technology?
          </li>
          <li>
            Define <em>structural</em>, <em>data</em>, and <em>control</em> hazards.
          </li>
          <li>
            Give an example of a structural hazard and tell how it can be eliminated.
          </li>
          <li>Give an example of a data hazard and give the name of the technique that can be used to minimize its effect.</li>
          <li>How are unavoidable data hazards dealt with in the MIPS instruction set architecture?</li>
          <li>Give an example of a control hazard and name a technique that can be used to minimize its effect.</li>
          <li>What type of hazard is <em>register forwarding</em> used for?</li>
          <li>Summarize how register forwarding works.</li>
          <li>What is the advantage of deep (many stages) pipelines?</li>
          <li>What is the disadvantage of deep pipelines?</li>
          <li>Write a sentence that summarizes the contents of all pipeline registers.</li>
          <li>If a pipeline has <em>n</em> stages, how many places does the system clock connect to?</li>
        </ol>
      </div>
    </div>
    <footer>
      <a href="../syllabus.xhtml">Course Syllabus</a>
      <a href="./">Schedule</a>
      <em>Page last updated <?php echo date('Y-m-d', filemtime($_SERVER['SCRIPT_FILENAME'])); ?></em>
      <a href="http://validator.w3.org/check?uri=referer"><?php echo $doctype; ?></a>
      <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3">CSS3</a>
    </footer>
  </body>
</html>
