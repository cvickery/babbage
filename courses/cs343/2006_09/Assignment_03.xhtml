<?php
  if (array_key_exists("HTTP_ACCEPT", $_SERVER) &&
      stristr($_SERVER["HTTP_ACCEPT"], "application/xhtml+xml"))
  {
    header("Content-type: application/xhtml+xml");
    print("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n");
  }
  else
  {
    header("Content-type: text/html; charset=utf-8");
  }
 ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">

  <head>

    <title>CS-343 Assignment 3</title>

    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="stylesheet"
          type="text/css"
          media="all"
          href="/courses/css/style-all.css"
    />
    <link rel="stylesheet"
          type="text/css"
          media="screen"
          href="/courses/css/style-screen.css"
    />
    <link rel="stylesheet"
          type="text/css"
          media="print"
          href="/courses/css/style-print.css"
    />        

    <style type="text/css" media="all">
      table { width: 20%; }
      th,td  { text-align: center; }
      .imgBox { text-align: center; padding: 1em 2em; }
    </style>
    <style type="text/css" media="print">
      img { max-width: 100%; }
    </style>

  </head>

  <body>

    <div id="header">
      <h1>CS-343 Assignment 3</h1>
    </div>

    <div id="content">
      <h2>Overview</h2>
      <div class="whitebox">

        <p>This assignment is to implement a four-bit up/down counter on the
        UP2.  When PB1 is pressed, the counter increments once per second,
        and when PB2 is pressed, the counter decrements once per second. 
        When neither button is pressed and when both buttons are pressed,
        the counter does not change state.</p>

      </div>


      <h2>Procedure</h2>
      <div class="whitebox">
      
        <ol>
        
          <li>

            <h5>Set up the project directory for the assignment.</h5> <p
            class="runin">Create a subdirectory named <span
            class="directoryName">Assignment_03</span> under your <span
            class="directoryName">My Projects</span> directory and copy the
            following files into it:</p>
            <ul>
              <li><a href="hex2sevenseg.v">hex2sevenseg.v</a> This is the
              same file I provided for Assignment 2.</li>
              <li><a href="divideBy25.175M.v">divideBy25.175M.v</a> I am
              providing this file for converting the 25.175 MHz clock on the
              UP2 board to a 1 Hz clock so that you can see the behavior
              of your counter.</li>
              <li>Your 4x1 multiplexer BDF file from Assignment 2.</li>
            </ul>
          </li>
          
          <li>
            
            <h5>Create the project and create the initial set of
            symbols.</h5> <p class="runin"> Create a project in your
            Assignment_03 directory named <span class="programName"><span
            class="directoryName">Assignment_03</span></span>, and with the 
            top-level design entity is named <span
            class="programName">UpDownCounter</span>.  Add the three files
            already in the Assignment_03 directory to the project.  Open
            each one and convert it to a symbol.</p>

          </li>

          <li>
          
            <h5>Create the top-level design, and assign the pin
            numbers.</h5> <p class="runin">The top level design has three
            input pins, named <span class="variabelName">Up</span>, <span
            class="variableName">Down</span>, and <span
            class="variableName">Clock</span>, and seven output pins, one
            for each segment of one seven segment display.  Connect an
            instance of the <span class="functionName">hex2sevenseg</span>
            symbol to the output pins, and connect the Clock input pin to
            the <span class="variableName">ClockIn</span> pin of an instance
            of <span class="functionName">divideBy25175000</span>.  Build
            the project once now so the assignment editor will know the
            names of your pins.</p>
            
            <p>Assign PB1 (Pin 28) to <span class="variableName">Up</span>,
            PB2 to <span class="variableName">Down</span> (Pin 29), and
            assign <span class="variableName">Clock</span> to Pin 91. 
            Rembember that the pushbuttons need to be inverted in order to
            generate a 1 when pressed.  Assign the outputs of <span
            class="functionName">hex2sevenseg</span> to the appropriate pins
            of the <em>right</em> seven segment display on the UP2. 
            Optional:  Connect output pins to the segments of the left
            display and the two decimal points, and connect the inputs to
            those pins to Vcc (Logic 1) so they will remain dark.</p>
            
          </li>

          <li>
          
            <h5>Create a symbol for one counter bit.</h5> <p
            class="runin">There are five inputs and one output for a counter
            bit.  The inputs are named <span class="variableName">Up</span>,
            <span class="variableName">Down</span>, <span
            class="variableName">ToggleUp</span>, <span
            class="variableName">ToggleDown</span>, and <span
            class="variableName">Clock</span>.  Connect <span
            class="variableName">Up</span> and <span
            class="variableName">Down</span> to the selector inputs of a 4x1
            mux, and connect the output of the mux to the D input of a D
            Flip-Flop.  You will find a D flip-flop under
            primitives&rarr;storage.  It has two extra inputs named <span
            class="variableName">prn</span> and <span
            class="variableName">clrn</span> that you will need to connect
            to Vcc.  (When they are negative, they preset and clear the
            flip-flop independently of the clock.)</p>

            <p>Connect the inputs to the mux so that the flip-flop does
            nothing if neither <span class="variableName">Up</span> nor
            <span class="variableName">Down</span> is true or if both are
            true.  Use mux input number 1 to cause the flip-flop to toggle
            if <span class="variableName">ToggleUp</span> is true, and use
            mux input number 2 to cause the flip-flop to toggle if
            <span class="variableName">ToggleDown</span> is true.</p>

            <p>Connect the output of the flip-flop to an output pin named <span
            class="variableName">Q</span>.</p>

            <p>Name the schematic <span
            class="functionName">counterBit</span> and save it as a
            symbol.</p>

          </li>
          
          <li>
          
            <h5>Create a four-bit up/down counter.</h5> <p class="runin">Use
            four instances of <span class="functionBit">counterBit</span> to
            build a 4-bit up/down counter.  Input pins should be named <span
            class="variableName">Clock</span>, <span
            class="variableName">Up</span>, and <span
            class="variableName">Down</span>.  There should be four output
            pins named <span class="variableName">Out_8</span>, <span
            class="variableName">Out_4</span>, <span
            class="variableName">Out_2</span>, and <span
            class="variableName">Out_2</span> connected to the <span
            class="variableName">Q</span> outputs of the <span
            class="variableName">counterBit</span> instances.  Save as a
            symbol</p>

          </li>
          
          <li>
          
            <h5>Complete the top-level design and test</h5>
            <p class="runin">Insert an instance of the four-bit counter in
            the top level design.  Compile the design and test it to make
            sure it counts up and down correctly and does nothing when
            neither button is pressed and when both buttons are pressed.</p>
            
          </li>

        </ol>
      
      </div>
      
      <h2>Submit the Assignment</h2>
      <div class="whitebox">
      
        <p>When you have completed the circuit and tested to be sure it
        works correctly, send me an email message telling me the project is
        ready for grading.  Be sure to put <strong>CS-343 Assignment
        3</strong> in the subject line to avoid the wrath of my spam
        filters!  I will get a copy of your assignment from <span
        class="computerName">maple</span> and test it.</p>

        <p>If you worked on the assignment with someone else, be sure to
        list the names of both contributers in the email message so you both
        get full credit.  Be sure to tell me which account has the final
        version of the project for me to look at.</p>
        
        <p>Remember, it is perfectly all right to help each other to do the
        assignment.  Just don&rsquo;t exchange design files with each other;
        nobody learns anything if you do that.</p>

        <p><strong>Due Date</strong>  The assignment is due by midnight,
        September 28.  Do not submit the assignment unless you have verified
        that it works correctly using an actual UP2 in the lab.  Having said
        that, you can get partial (half) credit for &ldquo;trying.&rdquo; 
        Just say in your email that the assignment is incomplete, and I will
        look at your project, but not try to run it.</p>

      </div>

    </div>

    <div id="footer">
    <hr />
      <p class="links">
        <a href="/">Vickery Home</a>&nbsp;-&nbsp;
        <a href="../">CS-343 Home</a>&nbsp;-&nbsp;
        <a href="./">CS-343 Fall 2006</a>&nbsp;-&nbsp;
        <a href="http://validator.w3.org/check?uri=referer">
        XHTML</a>&nbsp;-&nbsp;
        <a href="http://jigsaw.w3.org/css-validator/check/referer">
        CSS</a>
      </p>
      <p><em>Last updated
        <?php echo gmdate("Y-m-d", filemtime($_SERVER['SCRIPT_FILENAME']));
        ?>.</em>
      </p>
    </div>
  </body>
</html>
