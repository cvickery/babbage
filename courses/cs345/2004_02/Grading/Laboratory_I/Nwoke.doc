{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f46\froman\fcharset238\fprq2 Times New Roman CE;}
{\f47\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f49\froman\fcharset161\fprq2 Times New Roman Greek;}{\f50\froman\fcharset162\fprq2 Times New Roman Tur;}{\f51\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f52\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f53\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f54\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f66\fmodern\fcharset238\fprq1 Courier New CE;}
{\f67\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f69\fmodern\fcharset161\fprq1 Courier New Greek;}{\f70\fmodern\fcharset162\fprq1 Courier New Tur;}{\f71\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f72\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f73\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f74\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\nowidctlpar\nooverflow\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*
\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{
\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 \styrsid2980628 Plain Text;}}{\*\rsidtbl \rsid2980628
\rsid6233533\rsid12988744\rsid15482992}{\*\generator Microsoft Word 10.0.2627;}{\info{\author Christopher Vickery}{\operator Christopher Vickery}{\creatim\yr2004\mo2\dy25\hr17\min13}{\revtim\yr2004\mo2\dy25\hr18\min25}{\version3}{\edmins4}{\nofpages4}
{\nofwords757}{\nofchars4319}{\*\company Queens College}{\nofcharsws5066}{\vern16437}}\ltrsect \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0
\dgvshow3\jcompress\viewkind1\viewscale100\nolnhtadjtbl\rsidroot2980628 \fet0{\*\docvar {ColorPos}{-1}}{\*\docvar {ColorSet}{-1}}{\*\docvar {StylePos}{-1}}{\*\docvar {StyleSet}{-1}}\ltrpar \sectd \ltrsect\pgnrestart\linex0\footery864\sectdefaultcl\sftnbj 
{\header \ltrpar \pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\nooverflow\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \kerning0\insrsid2980628 
\par }}{\footer \ltrpar \pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\nooverflow\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \kerning0\insrsid2980628 
\par }}{\*\pnseclvl1\pnucrm\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnqc\pnstart1\pnindent720\pnhang 
{\pntxta )}}{\*\pnseclvl5\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl8\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\qc \li0\ri0\nowidctlpar\nooverflow\faauto\rin0\lin0\itap0 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\insrsid2980628 Basic Lab Procedures
\par Kingsley Nwoke
\par Logic Design Lab, Queens College (C.U.N.Y) Spring 2004
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\nooverflow\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\insrsid2980628 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\fs24\insrsid2980628 Introduction}{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\insrsid2980628 
\par \tab The aim of the lab is to ensure our accounts are functioning properly, the process involved in developing projects for the FPGA and configuring the software we need 
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\fs24\insrsid2980628 Method
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\insrsid2980628 \tab The task of the lab was to log into to our accounts create appropriate directories and copy PAL examples from the Maple s
erver. Then we proceeded to log in and out to ensure our profiles were stored and reloaded from the server. Next we checked the working of the H drive by first storing files on it then logging in and out to ensure they were still there.
\par \tab The second task was to configure the software (DK) properly so that it meets the coding guidelines of the course and has the necessary libraries to compile projects. This meant adding appropriate paths and modifying pre-set paths.
\par \tab The third task was to look at the PAL exam
ples provided by Celoxica and run some of the examples. Next we studied the code of the seven segment and proceeded to modify and test it first on the simulator then on the FPGA. The modifications to the code included writing to two displays instead of on
e
, incrementing the displayed number, changing the operation (incrementing or decrementing) based on the state of the pushbuttons available on the FPGA. This required the notion of a parallel operations to allows us to read both buttons simultaneously and 
respond to them in the same time. Finally changing the type of the counter variable and observing the effect on the display.
\par The essential portion of the code is the following:
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2980628       while(1)\{
\par         if(Button0!=Button1)\{
\par           if(Button0==1)
\par             Count++;
\par            else
\par             Count--;
\par         \}//if
\par         else
\par           delay;
\par         Sleep(SleepTime);//Delay 
\par       \}//while
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\insrsid2980628 The states of the buttons are read and simultaneously the state are used to determine the operation. Since the dec
rement and increment or mutually exclusive operations the appropriate one takes place only if button 0 XOR button 1 is true otherwise no action is taken.
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\fs24\insrsid2980628 Results
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\insrsid2980628 \tab There were numerous problems with the accounts during the first two lab session resulting in
 the loss of data and our profiles. These problems have since been rectified. After modifying and debugging the seven segment example from Celoxica the final version performed as expected. Upon pushing of button 0 the counter incremented continuously and 
u
pon button 1 the counter decremented continuously. The mutually exclusive nature of the increment an decrement operation functional when the project is run. The changing of the counter from unsigned to signed had no effect on the seven segment display. Th
is is to be expected since the number passed to the seven segment display is interpreted as just unsigned.
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\fs24\insrsid2980628 Discussion}{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \fs24\insrsid2980628 
\par \tab The project met the goals of the assignment. The only of note is the difference in speed between the simulator and the FPGA. The difference was overcome by using the \'93#define\'94
 directive to define constants based on whether the compilation was for the simulator or FPGA.
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\fs24\insrsid2980628 Appendix
\par }\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10423687 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\insrsid12988744\charrsid10423687 /*
\par  * For simulation, use a pretend clock rate close to real time; 1MHz
\par  */
\par #ifdef USE_SIM
\par #define PAL_TARGET_CLOCK_RATE 1000000
\par #define Switch_0 8
\par #define Switch_1 9
\par #define SleepTime 100
\par #else
\par #define PAL_TARGET_CLOCK_RATE 20000000
\par #define Switch_0 0
\par #define Switch_1 1
\par #define SleepTime 200
\par #endif
\par 
\par #include "pal_master.hch"
\par #include "stdlib.hch"
\par 
\par /*
\par  * Forward declarations
\par  */
\par static macro proc Sleep (Milliseconds);
\par 
\par /*
\par  * Main program
\par  */
\par void main (void)
\par \{
\par     unsigned 8 Count; //Counter
\par \tab   unsigned 1 Button0; //State Of Button0
\par \tab   unsigned 1 Button1; //State Of Button1
\par 
\par    /*
\par     * Check we've got everything we need
\par     */
\par     PalVersionRequire (1, 0);
\par     PalSevenSegRequire (1);
\par 
\par     /*
\par      * Enable display
\par      */
\par     PalSevenSegEnable (PalSevenSegCT (0));
\par     PalSevenSegEnable (PalSevenSegCT (1));
\par 
\par     /*
\par      * Forever
\par      */
\par \tab  par\{
\par      /*
\par       * Read Button States
\par       */
\par       while(1)\{
\par         par\{
\par           PalSwitchRead(PalSwitchCT(Switch_0),&Button0);
\par           PalSwitchRead(PalSwitchCT(Switch_1),&Button1);
\par         \}//par
\par       \}//while
\par 
\par      /*
\par       * Make Decision To Count Up,Down or Not At All
\par       */
\par       while(1)\{
\par         if(Button0!=Button1)\{
\par           if(Button0==1)
\par             Count++;
\par            else
\par             Count--;
\par         \}//if
\par         else
\par           delay;
\par         Sleep(SleepTime);//Delay 
\par       \}//while
\par 
\par      /*
\par       * Display Counter
\par       */
\par       while(1)
\par       \{
\par         PalSevenSegWriteDigit (PalSevenSegCT (1), Count[3:0], 0);
\par         PalSevenSegWriteDigit (PalSevenSegCT (0), Count[7:4], 0);
\par \tab     \}//while
\par    \}//par
\par \}//main
\par 
\par /*
\par  * Sleep for "n" milliseconds
\par  */
\par static macro proc Sleep (Milliseconds)
\par \{
\par     macro expr Cycles = (PAL_ACTUAL_CLOCK_RATE * Milliseconds) / 1000;
\par     unsigned (log2ceil (Cycles)) Count;
\par 
\par     Count = 0;
\par     do
\par     \{
\par         Count++;
\par     \}
\par     while (Count != Cycles - 1);
\par \}}{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid12988744 
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\nooverflow\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\fs24\insrsid12988744 

\par }}