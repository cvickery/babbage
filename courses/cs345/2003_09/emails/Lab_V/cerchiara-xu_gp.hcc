/****************************************************************
*                                                               *
*                                                               *
*****************************************************************
*                                                               *
* Project   :   Lab 5                                           *
* Date      :   22 OCT 2003                                     *
* File      :   gp.hcc                           				*
* Author    :   Jianchuang Xu  					                *
* 				Eduardo Cerchiara                               *
*                                                               *
* Description:                                                  *
*     program is to generate a pulse every 20 msec. If one 		*
* 	pushbutton is pressed, the pulse is to be 1.0 msec long;	*
*	if the other button is pressed, the pulse is to be 2.0 msec	*
*	long. If neither button (or both buttons) is pressed, the 	*
*	pulse is to be 1.5 msec long. The servomotors we are using, *
*	Futaba model number 3003, rotates clockwise when it receives*
*	1.0 msec pulses, counterclockwise when it receives 2.0 msec	*
*	pulses, and not at all when it receives 1.5 msec pulses.    *           *
*																*
****************************************************************/





    #if (defined USE_RC200 || USE_RC200E)
    #define PAL_TARGET_CLOCK_RATE 50000000
    #define SW0 0
    #define SW1 1
    #define NUM_SWITCHES 2
    #else
    #define PAL_ACTUAL_CLOCK_RATE 1000000
   /*
    set clock = external "P1"
      with
      {
        extlib  = "DKSync.dll",
        extinst = "1000",       // Period of 1MHz simulated clock
        extfunc = "DKSyncGetSet"
      };
 */  
	#define SW0 8
    #define SW1 9
    #define NUM_SWITCHES 10
    #endif
 

#include "pal_master.hch"
#include "stdlib.hch"
static macro proc msec_delay (Millisecond);



unsigned 1 x = 0;
unsigned 1 button1,button2;
interface bus_out() ob1(unsigned 1 out = x)
with {data={"M2"}};

//with {extlib = "DKConnect.dll", extinst = "t(3)", extfunc ="DKConnectGetSet"};

chan ch1;


void main(void)
{
	while (1)
	{
		ch1 ! 0b01;
		msec_delay(200);	
	}
}

void main(void)
{
unsigned 2 temp;
PalVersionRequire(1,2);
PalSwitchRequire(SW0);
PalSwitchRequire(SW1);


	while (1)
	{ 
	par {
	ch1 ? temp;
	seq{
	if ((button1==1)&&(button2==0)) //1ms
	{
		x=1;
		msec_delay(10);
		x=0;
		msec_delay(190);
		}
	else if ((button1==0)&&(button2==1)) //2.0ms
	{
		x=1;
		msec_delay(20);
		x=0;
		msec_delay(180);
		}
	else	//1.5ms
	{
		x=1;
		msec_delay(15);
		x=0;
		msec_delay(185);
		}
		}
	PalSwitchRead(PalSwitchCT(SW0),&button1);
	PalSwitchRead(PalSwitchCT(SW1),&button2);
	}	
	}

}

static macro proc msec_delay (Milliseconds)
{
    macro expr Cycles = (PAL_ACTUAL_CLOCK_RATE * Milliseconds) / 10000;
    unsigned (log2ceil (Cycles)) Count;

    Count = 0;
    do
    {
        Count++;
    }
    while (Count != Cycles - 1);
}