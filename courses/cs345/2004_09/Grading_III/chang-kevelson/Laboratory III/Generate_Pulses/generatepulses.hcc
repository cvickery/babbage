//generatepulses.hcc

#if (defined USE_RC200E)
  #define PAL_TARGET_CLOCK_RATE 50000000
#else 
    set clock = external "P1"
    with {
  
      extlib = "DKSync.dll", 
      extinst = "1000", 
      extfunc = "DKSyncGetSet"
    }; 
#endif

#include <stdlib.hch>
#include <pal_master.hch>

unsigned 1 x = 0; 

interface bus_out() ob1(unsigned 1 out = x) 
  with {
#if (defined USE_RC200E)
  data={"M2"}
#else 
  extlib = "DKConnect.dll", 
  extinst = "t(1)", 
  extfunc = "DKConnectGetSet"
  
#endif  
  };//with

// delays the program for the # of microseconds
// passed as a parameter
macro proc microsec_delay(Milliseconds){
  #if (defined USE_SIM)
    #define PAL_ACTUAL_CLOCK_RATE 1000000
  #endif
  macro expr Cycles = (PAL_ACTUAL_CLOCK_RATE * Milliseconds) / 1000;
  unsigned (log2ceil (Cycles)) Count;

  Count = 0;
  do
  {
      Count++;
  }
  while (Count != Cycles - 1);
}//microsec_delay
//________________________________________________________________
  

  // Endlessly generates a 1 msec pulse for every 20 msec
void main(void) { 
  chan output;
  par{

    while(1){
      microsec_delay(20);
      output ! 1;
      output ! 0;
    }

    while(1){
      output ? x;
      microsec_delay(1);
      output ? x;
    }

  }//par
}//main
//________________________________________________________________
