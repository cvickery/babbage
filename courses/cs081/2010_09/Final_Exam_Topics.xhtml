<?php
  header("Vary: Accept");
  if ( array_key_exists("HTTP_ACCEPT", $_SERVER) &&
       stristr($_SERVER["HTTP_ACCEPT"], "application/xhtml+xml") ||
       stristr($_SERVER["HTTP_USER_AGENT"], "W3C_Validator") )
  {
    $content_type = "application/xhtml+xml";
    header("Content-type: application/xhtml+xml");
    print("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
  }
  else
  {
    $content_type = "text/html";
    header("Content-type: text/html; charset=utf-8");
  }
 ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>CS-081 Final Exam Topics</title>
    <link rel="shortcut-icon" href="../favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../../css/assignments.css" />
    <link rel="stylesheet" type="text/css" href="../../css/assignments-print.css" media="print" />
  </head>
  <body id='urn:uuid:9E55490B-7424-43FA-9377-759DFD330F38'>

<h1>CS-081 Final Exam Topics</h1>
    <section id="content">
    <p class="standout-block">
    	The exam will be based on parts of Chapters 3, 4, 12, and 13; class presentations; and assignments.
    </p>
      <h1>For the final exam you should be able to:</h1>
      <ul>
      	<li>
          Identify and use <a href="http://www.w3.org/TR/css3-selectors/#selectors">CSS level 1, 2, and 3 selectors</a>
        </li>
        <li>
          Relate CSS selectors to the DOM structure of a web page (parent, child and sibling concepts)
        </li>
        <li>
          Relate CSS selectors to class and id attributes
        </li>
        <li>
          Identify and use correct syntax for combining CSS selectors (the comma, greater-than sign, plus sign, and the space)
        </li>
        <li>
          Define and identify the components of a stylesheet: rules, selectors, property lists, property names, and property values.
        </li>
        <li>
          Write the code of <span class="tag">link</span> elements for stylesheets
        </li>
        <li>
          Define and write the code for CSS length properties (percent, em, px)
        </li>
        <li>
        	Explain and write the code for specifying colors in CSS: names, rgb percentages, rgb decimal values, rgba decimal
          values, 6-digit hexadecimal values, and 3-digit hexadecimal values.
        </li>
        <li>
        	Identify and write code for background properties: color, image, position, repeat, and attachment.
        </li>
        <li>
          Explain the relationships among HTML elements, the DOM, and the CSS box model.
        </li>
        <li>
          Specify, identify, and explain margin, padding, and border properties.
        </li>
        <li>
          Define inline, block, and float; tell what happens to the positions of elements that follow a floated element; explain
          the use of the clear property.
        </li>
        <li>
          Name the default positioning property for CSS boxes; explain relative, absolute, and fixed positioning.
        </li>
        <li>
          Tell what happens if you specify both the left and right (or top and bottom) properties for an absolutely positioned element.
        </li>
        <li>
          Name the two required attributes of <span class="tag">img</span> elements.
        </li>
        <li>
        	Tell why the height and width attributes of <span class="tag">img</span> elements should also be specified.
        </li>
        <li>
        	Define the aspect ratio of an image.
        </li>
        <li>
        	Define the intrinsic size of an image.
        </li>
        <li>
        	Tell how the height and width attributes of an <span class="tag">img</span> element can affect the aspect ratio and the
          size of an image.
        </li>
        <li>
          Tell how the size of CSS boxes, including images, can be controlled using CSS.
        </li>
        <li>
          Define lossy and lossless compression; relate it to image files.
        </li>
        <li>
        	Name three image file formats used on the web and tell how to decide which one to use from the Photoshop Save for Web and
          Devices panel.
        </li>
        <li>
        	Explain the differences in how transparency is handled in GIF, PNG-8, PNG-24, and JPEG files.
        </li>
        <li>
          Tell how SVG graphics differ from GIF, PNG, and JPEG.
        </li>
        <li>
          Define image gradients, color stops, and transparency stops.
        </li>
        <li>
          Tell how to achieve rounded corners and drop shadows using CSS; summarize current browser support for these features.
        </li>
        <li>
          Explain the use of <span class="tag">form</span>, <span class="tag">fieldset</span>, <span class="tag">legend</span>,
          <span class="tag">label</span>, <span class="tag">input</span>, <span class="tag">select</span>,
          <span class="tag">option</span>, <span class="tag">textarea</span>, and <span class="tag">button</span> elements in
          web forms.
        </li>
        <li>
          Identify the two required attributes of <span class="tag">form</span> elements, and tell what each does.
        </li>
        <li>
        	Tell what the type attribute of <span class="tag">input</span> elements is used for.
        </li>
        <li>
        	Tell what the name attribute is used for.
        </li>
        <li>
          Tell which types of form input elements use the value attribute, and why.
        </li>
        <li>
          Explain the submit type for <span class="tag">button</span> and <span class="tag">input</span> elements. Tell what the
          difference is between the two.
        </li>
        <li>
          Tell how <span class="tag">label</span> elements are linked to their corresponding <span class="tag">input</span>
          (or <span class="tag">select</span> or <span class="tag">textarea</span>) elements.
        </li>
        <li>
          Tell the difference between checkboxes and radio buttons.
        </li>
        <li>
        	Tell how to use the name attribute to identify a group of radio buttons.
        </li>
        <li>
        	Give the sequence of events from the time a user clicks the submit button on a form to the time a new web page is
          displayed based on submitting the form.
        </li>
        <li>
        	Write PHP code to display form data values that are submitted using the “get” method.
        </li>
      </ul>
    </section>
    <footer>
      <a href="../syllabus.xhtml">Course Syllabus</a>
      <a href="./">Schedule</a>
      <em>Page last updated <?php echo date('Y-m-d', filemtime($_SERVER['SCRIPT_FILENAME'])); ?></em>
      <a href="http://validator.w3.org/check?uri=referer">XHTML5</a>
      <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3">CSS3</a>
    </footer>
  </body>
</html>
